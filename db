#!/usr/bin/env bash

# This script is used to manage the database
# Usage: ./db [init|drop|migration:create|migration:run|migration:revert]
#
# Examples:
#   ./db init - initialize the database
#   ./db drop - drop the database
#   ./db migration:create - create a new migration
#   ./db migration:run - run the migrations
#   ./db migration:revert - revert the migrations

source .env

function initDb() {
  echo "Initializing database..."
  PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USERNAME -h $DATABASE_HOST -p $DATABASE_PORT -f src/migrations/database/up.sql
  echo "Database created"
}

function dropDb() {
  echo "Dropping database..."
  PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USERNAME -h $DATABASE_HOST -p $DATABASE_PORT -f src/migrations/database/down.sql
  echo "Database dropped"
}

function createMigration() {
  npx typeorm migration:create src/migrations/$1
}

function runMigration() {
  npm run build && npx typeorm migration:run -d dist/data.source.js
}

function revertMigration() {
  npm run build && npx typeorm migration:revert -d dist/data.source.js
}

if [[ $1 == "init" ]]; then
  initDb
elif [[ $1 == "drop" ]]; then
  dropDb
elif [[ $1 == "migration:create" ]]; then
  createMigration $2
elif [[ $1 == "migration:run" ]]; then
  runMigration
elif [[ $1 == "migration:revert" ]]; then
  revertMigration
else
  echo "Wrong option"
  exit 1
fi
